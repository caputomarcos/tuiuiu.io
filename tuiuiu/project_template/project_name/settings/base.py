"""
Django settings for {{ project_name }} project.

Generated by 'django-admin startproject' using Django {{ django_version }}.

For more information on this file, see
https://docs.djangoproject.com/en/{{ docs_version }}/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/
"""

from __future__ import absolute_import, unicode_literals

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/{{ docs_version }}/howto/deployment/checklist/

WSGI_APPLICATION = '{{ project_name }}.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/{{ docs_version }}/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True

ALLOWED_HOSTS = ['*']

# docker run -ti -e POSTGRES_PASSWORD=tuiuiutenant -e POSTGRES_USER=tuiuiutenant -e POSTGRES_DB=tuiuiutenant -p 5432:5432 -d postgres

DATABASES = {
    'default': {
        'ENGINE': 'tuiuiu.tuiuiutenant.postgresql_backend',
        'NAME': 'tuiuiutenant',  # Or path to database file if using sqlite3.
        'USER': 'tuiuiutenant',
        'PASSWORD': 'tuiuiutenant',
        'HOST': '0.0.0.0',  # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': '5432',  # Set to empty string for default.
    }
}

DATABASE_ROUTERS = (
    'tuiuiu.tuiuiutenant.routers.TenantSyncRouter',
)

DEFAULT_FILE_STORAGE = 'tuiuiu.tuiuiutenant.storage.TenantFileSystemStorage'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/{{ docs_version }}/howto/static-files/

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

STATICFILES_DIRS = [
    os.path.join(PROJECT_DIR, 'static'),
]

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


# Tuiuiu settings

TUIUIU_SITE_NAME = "{{ project_name }}"

# Base URL to use when referring to full URLs within the Tuiuiu admin backend -
# e.g. in notification emails. Don't include '/admin' or a trailing slash
BASE_URL = 'http://{{ project_name }}.tuiuiu.io'


# Application definition
SHARED_APPS = (
    'home',
    'search',

    'tuiuiu.contrib.api',
    'tuiuiu.contrib.frontendcache',
    'tuiuiu.contrib.postgres_search',
    'tuiuiu.contrib.routablepage',
    'tuiuiu.contrib.searchpromotions',
    'tuiuiu.contrib.settings',
    'tuiuiu.contrib.sitemaps',
    'tuiuiu.contrib.styleguide',
    'tuiuiu.contrib.table_block',
    'tuiuiu.contrib.modeladmin',
    'tuiuiu.contrib.experiments',

    'rest_framework',

    'tuiuiu.tuiuiufontawesome',
    #'tuiuiu.tuiuiualytics',
    'tuiuiu.tuiuiuforms',
    'tuiuiu.tuiuiuredirects',
    'tuiuiu.tuiuiuembeds',
    'tuiuiu.tuiuiusites',
    'tuiuiu.tuiuiuusers',
    'tuiuiu.tuiuiusnippets',
    'tuiuiu.tuiuiudocs',
    'tuiuiu.tuiuiuimages',
    'tuiuiu.tuiuiusearch',
    'tuiuiu.tuiuiutenant',
    'tuiuiu.tuiuiucustomers',
    'tuiuiu.tuiuiuadmin',
    'tuiuiu.tuiuiucore',

    'modelcluster',
    'taggit',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)


TENANT_APPS = (
    'home',
    'search',

    'tuiuiu.contrib.api',
    'tuiuiu.contrib.frontendcache',
    'tuiuiu.contrib.postgres_search',
    'tuiuiu.contrib.routablepage',
    'tuiuiu.contrib.searchpromotions',
    'tuiuiu.contrib.settings',
    'tuiuiu.contrib.sitemaps',
    'tuiuiu.contrib.styleguide',
    'tuiuiu.contrib.table_block',
    'tuiuiu.contrib.modeladmin',
    'tuiuiu.contrib.experiments',


    'rest_framework',

    'tuiuiu.tuiuiufontawesome',
    # 'tuiuiu.tuiuiualytics',

    'tuiuiu.tuiuiuforms',
    'tuiuiu.tuiuiuredirects',
    'tuiuiu.tuiuiuembeds',
    'tuiuiu.tuiuiusites',
    'tuiuiu.tuiuiuusers',
    'tuiuiu.tuiuiusnippets',
    'tuiuiu.tuiuiudocs',
    'tuiuiu.tuiuiuimages',
    'tuiuiu.tuiuiusearch',
    'tuiuiu.tuiuiuadmin',
    'tuiuiu.tuiuiucore',

    'modelcluster',
    'taggit',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)

#INSTALLED_APPS = list(set(TENANT_APPS + SHARED_APPS))

INSTALLED_APPS = [
    'home',
    'search',

    'tuiuiu.contrib.api',
    'tuiuiu.contrib.frontendcache',
    'tuiuiu.contrib.modeladmin',
    'tuiuiu.contrib.postgres_search',
    'tuiuiu.contrib.routablepage',
    'tuiuiu.contrib.searchpromotions',
    'tuiuiu.contrib.settings',
    'tuiuiu.contrib.sitemaps',
    'tuiuiu.contrib.styleguide',
    'tuiuiu.contrib.table_block',
    'tuiuiu.contrib.experiments',

    'rest_framework',

    'tuiuiu.tuiuiufontawesome',
    # 'tuiuiu.tuiuiualytics',

    'tuiuiu.tuiuiuforms',
    'tuiuiu.tuiuiuredirects',
    'tuiuiu.tuiuiuembeds',
    'tuiuiu.tuiuiusites',
    'tuiuiu.tuiuiuusers',
    'tuiuiu.tuiuiusnippets',
    'tuiuiu.tuiuiudocs',
    'tuiuiu.tuiuiuimages',
    'tuiuiu.tuiuiusearch',
    'tuiuiu.tuiuiutenant',
    'tuiuiu.tuiuiucustomers',
    'tuiuiu.tuiuiuadmin',
    'tuiuiu.tuiuiucore',

    'modelcluster',
    'taggit',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]


TENANT_MODEL = "tuiuiu.tuiuiucustomers.Customer"


MIDDLEWARE = [
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',

    'tuiuiu.tuiuiutenant.middleware.TenantMiddleware',
    'tuiuiu.tuiuiucore.middleware.SiteMiddleware',
    'tuiuiu.tuiuiuredirects.middleware.RedirectMiddleware',

]


# ROOT_URLCONF = '{{ project_name }}.urls'
ROOT_URLCONF = '{{ project_name }}.urls_tenants'
PUBLIC_SCHEMA_URLCONF = '{{ project_name }}.urls_public'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# GA_KEY_FILEPATH = os.path.join(PROJECT_DIR, '{{ project_name }}.json')
# GA_VIEW_ID = 'ga:xxx'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'request': {
            'format': '%(asctime)s [%(levelname)s] [%(schema_name)s / %(domain_url)s] %(name)s: %(message)s',
        },
    },
    'filters': {
        'request': {
            '()': 'tuiuiu.tuiuiutenant.log.TenantContextFilter'
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'filters': ['request'],
            'formatter': 'request',
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}
